// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayersBook.Data.Context;

#nullable disable

namespace PlayersBook.Data.Migrations
{
    [DbContext(typeof(PlayersBookDBContext))]
    partial class PlayersBookDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlayersBook.Domain.Entities.Advertisement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 9, 6, 23, 26, 29, 208, DateTimeKind.Local).AddTicks(6621));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Advertisement");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.GamesCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("GamesCategory");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.GamesTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("GamesTags");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdvertisementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 9, 6, 23, 26, 29, 208, DateTimeKind.Local).AddTicks(6972));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0f606a2-622c-46b8-a844-ae0e817b1839"),
                            DateCreate = new DateTime(2022, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gabrielmunhoz@playersbook.com",
                            IsDeleted = false,
                            LastName = "Munhoz",
                            Name = "Gabriel",
                            NickName = "Gmunho",
                            Password = "teste"
                        });
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 9, 6, 23, 26, 29, 208, DateTimeKind.Local).AddTicks(7158));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RatingNegative")
                        .HasColumnType("int");

                    b.Property<int>("RatingPositive")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Advertisement", b =>
                {
                    b.HasOne("PlayersBook.Domain.Entities.Player", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.GamesCategory", b =>
                {
                    b.HasOne("PlayersBook.Domain.Entities.Profile", null)
                        .WithMany("GamesCategoryProfile")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.GamesTags", b =>
                {
                    b.HasOne("PlayersBook.Domain.Entities.Profile", null)
                        .WithMany("GamesTagsProfile")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Player", b =>
                {
                    b.HasOne("PlayersBook.Domain.Entities.Advertisement", null)
                        .WithMany("Guests")
                        .HasForeignKey("AdvertisementId");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Profile", b =>
                {
                    b.HasOne("PlayersBook.Domain.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Advertisement", b =>
                {
                    b.Navigation("Guests");
                });

            modelBuilder.Entity("PlayersBook.Domain.Entities.Profile", b =>
                {
                    b.Navigation("GamesCategoryProfile");

                    b.Navigation("GamesTagsProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
